/****************************************************************************
**
** Namespace XA_SESSIONLib generated by dumpcpp v5.5.1 using
** dumpcpp.exe C:\eBEST\xingAPI\XA_Session.dll
** from the type library C:\eBEST\xingAPI\XA_Session.dll
**
****************************************************************************/

#ifndef QAX_DUMPCPP_XA_SESSIONLIB_H
#define QAX_DUMPCPP_XA_SESSIONLIB_H

// Define this symbol to __declspec(dllexport) or __declspec(dllimport)
#ifndef XA_SESSIONLIB_EXPORT
#define XA_SESSIONLIB_EXPORT
#endif

#include <qaxobject.h>
#include <qaxwidget.h>
#include <qdatetime.h>
#include <qpixmap.h>

struct IDispatch;


// Referenced namespace

namespace XA_SESSIONLib {

    enum XA_MESSAGE_ID {
        XA_FAILED               = -1,
        XA_SUCCESS              = 0
    };

    enum XA_SERVER_TYPE {
        XA_NOSELECTED_SERVER    = -1,
        XA_REAL_SERVER          = 0,
        XA_SIMUL_SERVER         = 1
    };

// forward declarations
    enum XA_MESSAGE_ID;
    enum XA_SERVER_TYPE;
    enum XA_MESSAGE_ID;
    enum XA_SERVER_TYPE;

// skipping event interface _IXASessionEvents

class XA_SESSIONLIB_EXPORT IXASession : public QAxObject
{
public:
    IXASession(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property ConnectTimeOut

    property ConnectTimeOut

    */
    inline int ConnectTimeOut() const; //Returns the value of ConnectTimeOut
    inline void SetConnectTimeOut(int value); //Sets the value of the ConnectTimeOut property

    /*
    Property SendPacketSize

    property SendPacketSize

    */
    inline int SendPacketSize() const; //Returns the value of SendPacketSize
    inline void SetSendPacketSize(int value); //Sets the value of the SendPacketSize property

    /*
    Method ConnectServer

    method ConnectServer

    */
    inline bool ConnectServer(const QString& szServerIP, int nServerPort);

    /*
    Method DisconnectServer

    method DisConnectServer

    */
    inline void DisconnectServer();

    /*
    Method GetAccountList

    method GetAccountList

    */
    inline QString GetAccountList(int nIndex);

    /*
    Method GetAccountListCount

    method GetAccountListCount

    */
    inline int GetAccountListCount();

    /*
    Method GetAccountName

    method GetAccountName

    */
    inline QString GetAccountName(const QString& szAcc);

    /*
    Method GetAcctDetailName

    method GetAcctDetailName

    */
    inline QString GetAcctDetailName(const QString& szAcc);

    /*
    Method GetAcctNickname

    method GetAcctNickname

    */
    inline QString GetAcctNickname(const QString& szAcc);

    /*
    Method GetClientIP

    method GetClientIP

    */
    inline QString GetClientIP();

    /*
    Method GetCommMedia

    method GetCommMedia

    */
    inline QString GetCommMedia();

    /*
    Method GetETKMedia

    method GetETKMedia

    */
    inline QString GetETKMedia();

    /*
    Method GetErrorMessage

    method GetErrorMessage

    */
    inline QString GetErrorMessage(int nErrorCode);

    /*
    Method GetLastError

    method GetLastError

    */
    inline int GetLastError();

    /*
    Method GetPath

    method GetPath

    */
    inline QString GetPath();

    /*
    Method GetServerName

    method GetServerName

    */
    inline QString GetServerName();

    /*
    Method IsConnected

    method IsConnected

    */
    inline bool IsConnected();

    /*
    Method IsLoadAPI

    method IsLoadAPI

    */
    inline bool IsLoadAPI();

    /*
    Method Login

    method Login

    */
    inline bool Login(const QString& szID, const QString& szPwd, const QString& szCertPwd, int nServerType, bool bShowCertErrDlg);

    /*
    Method Logout

    method Logout

    */
    inline bool Logout();

    /*
    Method SetPath

    method SetPath

    */
    inline void SetPath(const QString& szPath);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// Actual coclasses
class XA_SESSIONLIB_EXPORT XASession : public QAxWidget
{
public:
    XASession(QWidget *parent = 0, Qt::WindowFlags f = 0)
    : QAxWidget(parent, f)
    {
        setControl("{7fef321c-6bfd-413c-aa80-541a275434a1}");
    }

    XASession(IXASession *iface)
    : QAxWidget()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property ConnectTimeOut

    property ConnectTimeOut

    */
    inline int ConnectTimeOut() const; //Returns the value of ConnectTimeOut
    inline void SetConnectTimeOut(int value); //Sets the value of the ConnectTimeOut property

    /*
    Property SendPacketSize

    property SendPacketSize

    */
    inline int SendPacketSize() const; //Returns the value of SendPacketSize
    inline void SetSendPacketSize(int value); //Sets the value of the SendPacketSize property

    /*
    Method ConnectServer

    method ConnectServer

    */
    inline bool ConnectServer(const QString& szServerIP, int nServerPort);

    /*
    Method DisconnectServer

    method DisConnectServer

    */
    inline void DisconnectServer();

    /*
    Method GetAccountList

    method GetAccountList

    */
    inline QString GetAccountList(int nIndex);

    /*
    Method GetAccountListCount

    method GetAccountListCount

    */
    inline int GetAccountListCount();

    /*
    Method GetAccountName

    method GetAccountName

    */
    inline QString GetAccountName(const QString& szAcc);

    /*
    Method GetAcctDetailName

    method GetAcctDetailName

    */
    inline QString GetAcctDetailName(const QString& szAcc);

    /*
    Method GetAcctNickname

    method GetAcctNickname

    */
    inline QString GetAcctNickname(const QString& szAcc);

    /*
    Method GetClientIP

    method GetClientIP

    */
    inline QString GetClientIP();

    /*
    Method GetCommMedia

    method GetCommMedia

    */
    inline QString GetCommMedia();

    /*
    Method GetETKMedia

    method GetETKMedia

    */
    inline QString GetETKMedia();

    /*
    Method GetErrorMessage

    method GetErrorMessage

    */
    inline QString GetErrorMessage(int nErrorCode);

    /*
    Method GetLastError

    method GetLastError

    */
    inline int GetLastError();

    /*
    Method GetPath

    method GetPath

    */
    inline QString GetPath();

    /*
    Method GetServerName

    method GetServerName

    */
    inline QString GetServerName();

    /*
    Method IsConnected

    method IsConnected

    */
    inline bool IsConnected();

    /*
    Method IsLoadAPI

    method IsLoadAPI

    */
    inline bool IsLoadAPI();

    /*
    Method Login

    method Login

    */
    inline bool Login(const QString& szID, const QString& szPwd, const QString& szCertPwd, int nServerType, bool bShowCertErrDlg);

    /*
    Method Logout

    method Logout

    */
    inline bool Logout();

    /*
    Method SetPath

    method SetPath

    */
    inline void SetPath(const QString& szPath);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// member function implementation
#ifndef QAX_DUMPCPP_XA_SESSIONLIB_NOINLINES
inline int XASession::ConnectTimeOut() const
{
    QVariant qax_result = property("ConnectTimeOut");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XASession::SetConnectTimeOut(int value){ setProperty("ConnectTimeOut", QVariant(value)); }

inline int XASession::SendPacketSize() const
{
    QVariant qax_result = property("SendPacketSize");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XASession::SetSendPacketSize(int value){ setProperty("SendPacketSize", QVariant(value)); }

inline bool XASession::ConnectServer(const QString& szServerIP, int nServerPort)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szServerIP, (void*)&nServerPort};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
    return qax_result;
}

inline void XASession::DisconnectServer()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
}

inline QString XASession::GetAccountList(int nIndex)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nIndex};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}

inline int XASession::GetAccountListCount()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline QString XASession::GetAccountName(const QString& szAcc)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szAcc};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
    return qax_result;
}

inline QString XASession::GetAcctDetailName(const QString& szAcc)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szAcc};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
    return qax_result;
}

inline QString XASession::GetAcctNickname(const QString& szAcc)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szAcc};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
    return qax_result;
}

inline QString XASession::GetClientIP()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
    return qax_result;
}

inline QString XASession::GetCommMedia()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
    return qax_result;
}

inline QString XASession::GetETKMedia()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
    return qax_result;
}

inline QString XASession::GetErrorMessage(int nErrorCode)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nErrorCode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
    return qax_result;
}

inline int XASession::GetLastError()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
    return qax_result;
}

inline QString XASession::GetPath()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
    return qax_result;
}

inline QString XASession::GetServerName()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
    return qax_result;
}

inline bool XASession::IsConnected()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 52, _a);
    return qax_result;
}

inline bool XASession::IsLoadAPI()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 53, _a);
    return qax_result;
}

inline bool XASession::Login(const QString& szID, const QString& szPwd, const QString& szCertPwd, int nServerType, bool bShowCertErrDlg)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szID, (void*)&szPwd, (void*)&szCertPwd, (void*)&nServerType, (void*)&bShowCertErrDlg};
    qt_metacall(QMetaObject::InvokeMetaMethod, 54, _a);
    return qax_result;
}

inline bool XASession::Logout()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 55, _a);
    return qax_result;
}

inline void XASession::SetPath(const QString& szPath)
{
    void *_a[] = {0, (void*)&szPath};
    qt_metacall(QMetaObject::InvokeMetaMethod, 57, _a);
}


inline int IXASession::ConnectTimeOut() const
{
    QVariant qax_result = property("ConnectTimeOut");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IXASession::SetConnectTimeOut(int value){ setProperty("ConnectTimeOut", QVariant(value)); }

inline int IXASession::SendPacketSize() const
{
    QVariant qax_result = property("SendPacketSize");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IXASession::SetSendPacketSize(int value){ setProperty("SendPacketSize", QVariant(value)); }

inline bool IXASession::ConnectServer(const QString& szServerIP, int nServerPort)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szServerIP, (void*)&nServerPort};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline void IXASession::DisconnectServer()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline QString IXASession::GetAccountList(int nIndex)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nIndex};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IXASession::GetAccountListCount()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline QString IXASession::GetAccountName(const QString& szAcc)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szAcc};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline QString IXASession::GetAcctDetailName(const QString& szAcc)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szAcc};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline QString IXASession::GetAcctNickname(const QString& szAcc)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szAcc};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline QString IXASession::GetClientIP()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline QString IXASession::GetCommMedia()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline QString IXASession::GetETKMedia()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline QString IXASession::GetErrorMessage(int nErrorCode)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nErrorCode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int IXASession::GetLastError()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline QString IXASession::GetPath()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline QString IXASession::GetServerName()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline bool IXASession::IsConnected()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline bool IXASession::IsLoadAPI()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline bool IXASession::Login(const QString& szID, const QString& szPwd, const QString& szCertPwd, int nServerType, bool bShowCertErrDlg)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szID, (void*)&szPwd, (void*)&szCertPwd, (void*)&nServerType, (void*)&bShowCertErrDlg};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline bool IXASession::Logout()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline void IXASession::SetPath(const QString& szPath)
{
    void *_a[] = {0, (void*)&szPath};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}



#endif

}

QT_BEGIN_NAMESPACE

namespace QtMetaTypePrivate {
template<>
struct QMetaTypeFunctionHelper<XA_SESSIONLib::XASession, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<XA_SESSIONLib::XASession*>(t)->XA_SESSIONLib::XASession::~XASession();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) XA_SESSIONLib::XASession;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const XA_SESSIONLib::XASession*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<XA_SESSIONLib::XASession*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<XA_SESSIONLib::IXASession, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<XA_SESSIONLib::IXASession*>(t)->XA_SESSIONLib::IXASession::~IXASession();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) XA_SESSIONLib::IXASession;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const XA_SESSIONLib::IXASession*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<XA_SESSIONLib::IXASession*>(t); }
#endif // QT_NO_DATASTREAM
};

} // namespace QtMetaTypePrivate
QT_END_NAMESPACE

#endif

